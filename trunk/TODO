ToDo's:

1) efficiency/memory
- use mpres in step 2
- optimize memory usage in step 2 (use an unique array for multiplies)
- write a mpn version of add3 and duplicate  
- use/implement a mpn_mul_hi_n routine for use in mpn_REDC
- use mpn_addmul_2, mpn_addmul_4 in the basecase REDC [for machines
  where it exists]
- try McLaughlin's algorithm for Montgomery's modular multiplication
  (http://www.ams.org/mcom/0000-000-00/S0025-5718-03-01543-6/home.html)
- consider Colin Percival's generalized DWT for multiplication modulo
  k*a^n+b, where k*a*b is highly composite. May belong into GMP rather than
  gmp-ecm.
- perform PolyFromRoots/Polyeval level by level (add one parameter i which
	says which level has to be performed, and save/restore the
	corresponding data to/from file)
        Mostly done.
- implement assembly code (redc.asm) for other architectures
  (rename it to redc.s, add AM_PROG_AS in configure.in, add an option
	--want_asm or similar)

2) interface
- with -resume, print %time for THIS RUN instead of total run?
	[suggested by SleepHound <sleephound@yahoo.com>]
- when resuming, print the *initial* x0 for P-1/P+1?
- option -base2 to force base2 when res/lo > threshold?
- the following was asked by Allan Steel <allan@maths.usyd.edu.au>
  from the Magma group on Fri, 4 Feb 2005:
  (a) user control of "verbose" messages (pass a pointer to a function to
	replace printf, or pass a stream to replace stdout)
        Have outputf() now which apps can replace. Solved?
  (b) error control: don't call exit/abort but return an error value
      Proposal: 1=factor found, 0=no factor found, -1=error.
      remains to do: none?
  (c) have polygcd in stage 2 (to use less memory)
        Does the treefile idea solve this?
  (d) get rid of the mpz_ layer (Magma only uses mpn currently)
- proposal from Karim Belabas <Karim.BELABAS@math.u-psud.fr>: define an
	abstract interface for the parameters, to be able to modify it
	in the future, for example:
   int
   ecm(mpz_t,               /* factor found if any */
       mpz_t,               /* n:number to factor */
       struct ecm_params*); /* all technical/verbosity/debugging  parameters */

   where ecm (f, N, NULL) would give the default behaviour.

