#!/bin/sh

# test file for ECM on GPU
#
# Copyright 2012
# Jim Fougeron, Alexander Kruppa, Dave Newman, Paul Zimmermann, Cyril Bouvier,
# David Cleaver.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or (at your
# option) any later version.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
# more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING.  If not, see
# http://www.gnu.org/licenses/ or write to the Free Software Foundation, Inc.,
# 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.

ECM="$1 -gpu -gpucurves 1"

# Call with "checkcode $? n" to check that return code is n
# (see test.pm1 for the explanation of the different return codes)              
checkcode () {
  if [ $1 != $2 ]
  then
    echo "############### ERROR ###############"
    echo "Expected return code $2 but got $1"
    exit 1
  fi
}

# Exit statues returned by GMP-ECM:
# 0      Normal program termination, no factor found
# 1      Error
# 2      Composite factor found, cofactor is composite
# 6      Probable prime factor found, cofactor is composite
# 8      Input number found
# 10     Composite factor found, cofactor is a probable prime
# 14     Probable prime factor found, cofactor is a probable prime

# test for stage 1 on GPU
echo 458903930815802071188998938170281707063809443792768383215233 | $ECM -sigma 3:227 125 0
checkcode $? 14

# test for stage 1 on GPU
echo "2^349-1" | $ECM -sigma 3:279 587 0
checkcode $? 6

# test default param
echo "2^349-1" | $ECM 587 0

# test param=1
echo "2^349-1" | $ECM -param 1 587 0
checkcode $? 1

# test -redc (should give a warning)
echo "2^349-1" | $ECM -redc 587 0
checkcode $? 0

# test a Fermat number
echo "2^512+1" | $ECM 587 0

# 2^1018-1 is the maximun number that can be used
echo "2^1018-1" | $ECM -sigma 3:92 4 0
checkcode $? 2

# try 2^1019-1: should give an error
echo "2^1019-1" | $ECM -sigma 3:92 4 0
checkcode $? 1

# test for when stage 2 on CPU is needed
echo "2^349-1" | $ECM -sigma 3:13 587 1261
checkcode $? 8

# test -v option
echo 95209938255048826235189575712705128366296557149606415206280987204268594538412191641776798249266895999715600261737863698825644292938050707507901970225804581 | $ECM -v 1e3
checkcode $? 0

# test B1done > 0 (not implemented)
echo 95209938255048826235189575712705128366296557149606415206280987204268594538412191641776798249266895999715600261737863698825644292938050707507901970225804581 | $ECM 100-200
checkcode $? 1

# test -A (not implemented)
echo 95209938255048826235189575712705128366296557149606415206280987204268594538412191641776798249266895999715600261737863698825644292938050707507901970225804581 | $ECM -A 17 100
checkcode $? 1

# test invalid sigma
echo 95209938255048826235189575712705128366296557149606415206280987204268594538412191641776798249266895999715600261737863698825644292938050707507901970225804581 | $ECM -sigma 11 100
checkcode $? 1

echo 95209938255048826235189575712705128366296557149606415206280987204268594538412191641776798249266895999715600261737863698825644292938050707507901970225804581 | $ECM -sigma 3:1 100
checkcode $? 1

echo 95209938255048826235189575712705128366296557149606415206280987204268594538412191641776798249266895999715600261737863698825644292938050707507901970225804581 | $ECM -sigma 3:4294967295 100
checkcode $? 1

# test -go (not implemented)
echo 95209938255048826235189575712705128366296557149606415206280987204268594538412191641776798249266895999715600261737863698825644292938050707507901970225804581 | $ECM -go 17 100
checkcode $? 1

# exercise warning "Can't compute success probabilities for B1 <> B2min"
echo 95209938255048826235189575712705128366296557149606415206280987204268594538412191641776798249266895999715600261737863698825644292938050707507901970225804581 | $ECM -v 100 200-300
checkcode $? 0

echo "All ECM tests with GPU are ok."
