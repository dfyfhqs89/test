2005-02-22  paul  <zimmerma>

	* INSTALL, Makefile.am, auxi.c, candi.c, eval.c, main.c, memory.c:
	don't install tune*, ecmfactor
	fixed problems with -DMEMORY_DEBUG

2005-02-22  alex  <kruppa>

	* stage2.c:
	bestD() overwriting original B2 caused B2 to keep ever growing. Fixed

	* README, bestd.c:
	Corrected computation of effective B2 value in bestD(). It did not account
	for rounding up due to integer block size. This changes computed
	probabilities, table in README updated accordingly

	* main.c: Added option -timestamp

	* INSTALL:
	On SunOS, the compiler and flags must be specified at configure time, or
	testing for GMP lib/header version match fails

	* TODO: Removed -base2 entry, it's done

2005-02-22  laurent  <fousse>

	* Makefile.am: Distribute ecm.xml too.

2005-02-22  paul  <zimmerma>

	* factor.c, main.c: fixed memory leaks

	* listz.c: moved declaration outside a #ifdef

2005-02-22  alex  <kruppa>

	* bestd.c, rho.c, stage2.c, README:
	bestD() computes new effective B2 value. ecmprob() now assumes group order
	divisible by 24 on average (README updated).

	* auxlib.c:
	outputf() was missing the va_end(). Not sure if it is really needed (i.e. to
	avoid memleaks), but it's cleaner to have it

2005-02-22  paul  <zimmerma>

	* TODO, auxlib.c: fixed problem under MinGW (thanks Japke Rosink)

2005-02-22  alex  <kruppa>

	* main.c:
	Added #include <time.h>, missing it causes segfault on Amd64 because
	sizeof(int) != sizeof(char*)

2005-02-22  paul  <zimmerma>

	* ecmprob.magma: added some results

2005-02-21  alex  <kruppa>

	* stage2.c, main.c, pm1.c, pp1.c, ecm.c, ecm.h, factor.c, bestd.c, ecm-impl.h:
	Changed B2, B2min to mpz_t, can now be arbitrarily large so long as
	B2-B2min < ~1e24.

2005-02-19  paul  <zimmerma>

	* pm1.c, pp1.c: put back x0=... in normal verbose mode (P-1/P+1)

2005-02-19  alex  <kruppa>

	* ecm2.c, main.c, mpmod.c, pm1.c, pp1.c, ecm-impl.h, ecm.c:
	Added option -base2. Added option -savea (appending to save files). Fixed
	bug in ecm2.c multiplyWn() debugging code

	* pp1.c, stage2.c, pm1.c, ecm.c, ecm-impl.h:
	Added another verbosity level: RESVERBOSE, enabled with "-v -v". Prints
	intermediate residues (after stage 1 etc), mere "-v" does not anymore

2005-02-18  paul  <zimmerma>

	* pp1.c:
	fixed problem with |S|=1 (was: pp1_mul did modify the exponent passed)

2005-02-18  alex  <kruppa>

	* pp1.c: A bug for |S| > 1 fixed, |S| == 1 still mysteriously broken

	* stage2.c, bestd.c, ecm-impl.h, ecm.h, ecm2.c, main.c, pm1.c, pp1.c:
	Using mpz_t for i0, s and related vars. Eliminates most overflow conditions.
	Currently, P+1 with S=1 does not work correctly, to be fixed later

2005-02-17  alex  <kruppa>

	* ChangeLog:
	Added treefile, double sieve, new ECM root generation that reduces extgcds

	* TODO: treefile is done, removed

2005-02-17  paul  <zimmerma>

	* ecm-impl.h, ecm.c, pp1.c, ChangeLog, TODO:
	changed default poly. choice in P+1 (now same as in ECM)

2005-02-17  alex  <kruppa>

	* stage2.c:
	Fixed segfault: n could get mpz_clear'd without having been inited
	Fixed overflow condition in fin_diff_coeff() by using mpz_t's. Makes
	test.pp1 work with |S| > 1.
	Small comment changes.

	* pm1.c:
	Changed printf to outputf, #ifdef DEBUG to WANT_ASSERT and exit() to return
	with error status

2005-02-17  paul  <zimmerma>

	* ecmprob.magma, pm1.c, pp1.c, stage2.c, ecm-impl.h, ecm.h:
	finished Brent-Suyama's extension for P+1

2005-02-16  paul  <zimmerma>

	* ecm-impl.h, ecm2.c, pp1.c, stage2.c: Brent/Suyama for P+1 (cont'd)

2005-02-16  alex  <kruppa>

	* ecm2.c: Replaced printf by outputf

2005-02-16  paul  <zimmerma>

	* stage2.c, ecm-impl.h, ecm2.c, pp1.c:
	preliminary code for Brent/Suyama's extension in P+1

2005-02-15  alex  <kruppa>

	* ecm.c: Increased thresholds for high Brent-Suyama degrees

	* README: A small correction about mem saving with treefiles, and typo

	* ecm-impl.h, pp1.c, stage2.c, bestd.c:
	My latest attempt to get bestD() right: new conditions for i0 and i1, and
	fixed init of progressions if i0 != 0 (mod d2)

2005-02-14  alex  <kruppa>

	* polyeval.c, stage2.c: Small cleanups of treefile code

2005-02-13  alex  <kruppa>

	* README: Added description of -treefile, plus some small changes

2005-02-11  paul  <zimmerma>

	* random.c: commented the outputf calls in non-library mode

2005-02-11  alex  <kruppa>

	* bestd.c, random.c, stage2.c, TODO:
	Small changes to use ECM_ERROR and outputf(), updated TODO

2005-02-11  paul  <zimmerma>

	* polyeval.c: removed unused variable

2005-02-11  alex  <kruppa>

	* pp1.c, stage2.c, main.c, pm1.c, polyeval.c, ecm.h, factor.c, listz.c, ecm-impl.h, ecm.c:
	Storing product tree of F in files pretty much works now. Some cleanups tbd

2005-02-10  alex  <kruppa>

	* test.ecm: Small comment change

2005-02-09  paul  <zimmerma>

	* pp1.c, stage2.c, README.lib, ecm.c, ecm.h, factor.c, main.c, pm1.c:
	updated README.lib
	now use the library function ecm_factor() in main.c too!

2005-02-09  alex  <kruppa>

	* schoen_strass.c: Changes for library, uses ASSERT and outputf() now

2005-02-08  paul  <zimmerma>

	* Makefile.am, README, auxlib.c, bestd.c, ecm-impl.h, ecm2.c, ecmfactor.c, main.c, mul_lo.c, trial.c, tune.c, tune2.c:
	further cleanup

	* README.lib: documentation for libecm

	* pm1.c, pp1.c, stage2.c, factor.c, listz.c, main.c, mpmod.c, ecm-impl.h, ecm.c, ecm.h, ecm2.c, auxlib.c:
	got rid of verbose parameter through outputf() interface

	* random.c, ecm.h, ecm2.c, ecmfactor.c, factor.c, main.c, pm1.c, pp1.c, auxi.c, ecm-ecm.h, ecm-impl.h, ecm.c:
	further work for library interface

	* mul_lo.c, stage2.c, main.c: fixed problems to please icc

	* test.pm1: added test for step 2 primes near B2min

	* Makefile.am, ecm-ecm.h, ecm-impl.h, ecm.c, ecm.h, factor.c, main.c, pm1.c, pp1.c, resume.c, stage2.c:
	preliminary new file factor.c for library interface

2005-02-07  alex  <kruppa>

	* rho.c: Changed error testing/handling to ASSERT.

2005-02-07  paul  <zimmerma>

	* auxlib.c, bestd.c, ecm-impl.h, ecm2.c, getprime.c, ks-multiply.c, mpmod.c, rho.c, stage2.c, toomcook.c:
	got rid of xmalloc() [now allocation errors are signaled to caller]
	replaced abort, exit, stdout, stderr, printf, gmp_printf...

	* schoen_strass.c, configure.in:
	check for __gmpn_mod_34lsub1 in configure, and wrote a replacement for it
	when it does not exist

	* auxlib.c: use ECM_STDOUT/ECM_STDERR

	* auxi.c, ecm-ecm.h: removed gcd in auxi.c, ecm-ecm.h

	* ks-multiply.c, listz.c, lucas.c, median.c, mpmod.c, mul_lo.c, pm1.c, polyeval.c, pp1.c, rho.c, schoen_strass.c, stage2.c, tune2.c, TODO, auxlib.c, bestd.c, ecm-ecm.h, ecm-impl.h, ecm.c, ecm2.c, getprime.c:
	removed FILE arguments

2005-02-06  alex  <kruppa>

	* ecm-ecm.h, ecm-impl.h, ecm.c, main.c, stage2.c, auxlib.c:
	Encapsuled output control in outputf() function, made stage2.c and ecm.c use
	that function

	* rho.c: For B1=1, computation would go into very long loop. Fixed

	* stage2.c:
	Removed experimental SAVE_TREE code, put <math.h> back in for pow() etc.

2005-02-05  alex  <kruppa>

	* rho.c, stage2.c:
	Got rid of finite() in stage2.c, made sure ecmprob() does not return
	negative values

2005-02-04  paul  <zimmerma>

	* TODO: put proposal from Karim Belabas

	* schoen_strass.c, stage2.c, toomcook.c, mul_lo.c, polyeval.c, rho.c, median.c, listz.c, ks-multiply.c, TODO, ecm-impl.h:
	more changes to catch errors and specify output/error streams

	* ecm-impl.h, stage2.c, test.pm1:
	changed one P-1 test (B2 was too near from 2^53, so that B2' overflowed)

2005-02-04  alex  <kruppa>

	* bestd.c: Fixed bug in bestd() ...again (following PaulZ's suggestion)

2005-02-04  paul  <zimmerma>

	* bestd.c, mul_lo.c: added FIXME in bestd.c
	changed mul_lo.c to use table computed by tune2.c

	* tune2.c: fixed pb with return value

	* median.c, mpmod.c, pm1.c, polyeval.c, pp1.c, stage2.c, ecmfactor.c, getprime.c, listz.c, lucas.c, main.c, ecm2.c, ecm-impl.h, ecm.c, ecm.h:
	put back changes from Alex (rev 1.57 to 1.58 of pm1.c) that I removed by error
	added control for output/error streams
	changed exit(1) into error return values

2005-02-03  paul  <zimmerma>

	* TODO, configure.in: updated TODO
	removed useless message in configure

2005-02-03  alex  <kruppa>

	* ecm-impl.h, ecm2.c, mpmod.c, pm1.c, pp1.c:
	Replaced UNUSED by ATTRIBUTE_UNUSED, following GMP convention (see
	gmp-impl.h)

	* TODO: Montgomery's double sieve is pretty much implemented now

	* bestd.c:
	Fixed bug in bestd() which sometimes caused too small d values to be chosen,
	thus failing to test entire [B2min,B2] interval

	* auxlib.c: SunOS needs time.h for CLOCKS_PER_SEC

2005-02-03  paul  <zimmerma>

	* pm1.c, polyeval.c, pp1.c, random.c, rho.c, schoen_strass.c, stage2.c, toomcook.c, mpmod.c, mul_lo.c, ecm2.c, getprime.c, ks-multiply.c, listz.c, lucas.c, median.c, auxlib.c, bestd.c, ecm.c:
	changed header from GPL to LGPL
	added missing years if any

	* ecmfactor.c: improved readability

2005-02-03  laurent  <fousse>

	* median-aux.c: Removed unused file median-aux.c.

	* ecm.xml: ecm.xml validates again.

2005-02-03  paul  <zimmerma>

	* Makefile.am: added missing headers

	* getprime.c: added main() to compile with -DMAIN

	* countsmooth.c: added missing #ifndef and url for primegen

2005-02-03  alex  <kruppa>

	* schoen_strass.c: Made F_mod_*() static, hopefully to please icc

2005-02-03  paul  <zimmerma>

	* auxlib.c, ecm-ecm.h, ecm-impl.h, ecmfactor.c, getprime2.c, nbdigits.c, random.c, random2.c:
	new files for library

	* stage2.c, toomcook.c, trial.c, tune.c, tune2.c, smartprp.c, resume.c, rho.c, schoen_strass.c, mul_lo.c, pm1.c, polyeval.c, pp1.c, ks-multiply.c, listz.c, lucas.c, main.c, median.c, mpmod.c, ecm.h, ecm2.c, eval.c, getprime.c, bestd.c, candi.c, configure.in, countsmooth.c, ecm-gmp.h, ecm.c, Makefile.am, auxi.c, b1_ainc.c:
	complete rewrite to separate library/frontend

	* test.pp1, check.mpl, ecm.h, listz.c, stage2.c: modified one P+1 test

	* ecm-gmp.h, pm1.c, tune.c, tune2.c:
	fixed warnings (with -W -Wall -pedantic -Wmissing-prototypes)

2005-02-02  alex  <kruppa>

	* ecm2.c, pm1.c, stage2.c, ecm.h:
	Cleanup of ecm/pm1_rootsF code. Small speedup in pm1_rootsF init.

2005-02-02  paul  <zimmerma>

	* Makefile.am, ecm.h, mul_lo.c, tune.c, tune2.c:
	added new file tune2.c for tuning mpn_mul_lo_n()

	* ecm-gmp.h: added missing MPN_OVERLAP_P

	* ecm.xml: changed email for Jim

	* AUTHORS: added item for Jim

	* AUTHORS: mungled email addresses

	* README, configure.in, ecm-gmp.h, ecm.h, ks-multiply.c, mpmod.c, mul_lo.c, pm1.c, tune.c:
	added --enable-assert to configure
	got rid of WANT_GMP_IMPL

	* README, ecm.xml: added -prp options in ecm.xml
	cleaned README

	* main.c, pm1.c, stage2.c, eval.c: more cleanup

	* README, bestd.c, countsmooth.c, ecm.c, ecm.h, eval.c, getprime.c, main.c, mpmod.c, pm1.c, pp1.c, trial.c:
	more cleanup (fixed icc warnings)

	* Makefile.am, README, TODO, configure.in, ecm.xml, mpmod.c:
	updated README
	added target tune in Makefile

2005-02-01  alex  <kruppa>

	* pp1.c, stage2.c, ecm.h:
	Printing of mul count in rootsF/G for P+1 put back in

	* ecm2.c:
	Better selection of number of parallel progressions in ecm_rootsF(), avoids
	unreasonably long init times

2005-02-01  paul  <zimmerma>

	* main.c, pm1.c, pp1.c, test.ecm, README, candi.c, ecm.c, ecm.h:
	made -go work for P+1 and ECM

2005-02-01  alex  <kruppa>

	* pm1.c: Merge errors. :(  Fixed

	* ecm2.c, pm1.c:
	Put counting of muls/extgcds when computing roots of F/G back in. Only
	printed with "-v -v" (or more -v)

2005-02-01  paul  <zimmerma>

	* ChangeLog, Makefile.am, README.dev, TODO, configure.in, ecm.xml, main.c:
	updated TODO, ChangeLog, ecm.xml

	* AUTHORS: obscured my email

2005-02-01  alex  <kruppa>

	* AUTHORS: Updated (and obscured) my email address

2005-02-01  paul  <zimmerma>

	* configure.in: avoid AC_CHECK_LIB

2005-02-01  alex  <kruppa>

	* INSTALL: Minor corrections

2005-02-01  paul  <zimmerma>

	* configure.in: check mpn_mul_fft *after* LDFLAGS/LIBS are defined

	* TODO, ecm.c, ecm.h, main.c, pm1.c, pp1.c, stage2.c, ChangeLog, README:
	removed -ticdelay option (was unsupported)

	* INSTALL, Makefile.am, ecm.xml: added man page (ecm.1) in distribution
	added install instruction in INSTALL

	* auxi.c: added missing years

	* ecm.xml: added missing <para> </para>

	* INSTALL, ecm.xml: modified INSTALL for new configure/make

2005-01-31  paul  <zimmerma>

	* bestd.c, ecm.h, ks-multiply.c, listz.c, median.c, resume.c, toomcook.c:
	code cleanup (removed muls count, unused code, ...)

	* AUTHORS, README, ecm.xml, ks-multiply.c, listz.c:
	improved documentation

2005-01-31  alex  <kruppa>

	* resume.c: Fixed possible unterminated string

2005-01-31  paul  <zimmerma>

	* Makefile.am, README.dev, configure.in: simplified LDFLAGS/LIBS

	* README.dev, ecm.1, ecm.xml:
	source documentation is now ecm.xml (docbook)

	* main.c: updated champion's digits

2005-01-28  paul  <zimmerma>

	* test.ecm: removed last line

2005-01-28  laurent  <fousse>

	* configure.in: Configure.in needs to set LDFLAGS.

2005-01-28  paul  <zimmerma>

	* ks-multiply.c, listz.c, ecm.h: fixed bug (MPN_COPY requires size > 0)

	* ks-multiply.c, test.ecm, test.pm1, test.pp1:
	check non-zero size in MPN_COPY

2005-01-28  laurent  <fousse>

	* ecm.h, main.c, resume.c: VERSION is defined in configure.in now.

2005-01-28  paul  <zimmerma>

	* pp1.c, schoen_strass.c, stage2.c, Makefile.am, README, TODO, bestd.c, configure.in, ecm.c, ecm.h, ecm2.c, eval.c, listz.c, lucas.c, main.c, mul_lo.c, ntl.c, pm1.c, polyeval.c, polyz.c:
	removed counting of multiplications
	removed use of NTL
	updated TODO

2005-01-27  paul  <zimmerma>

	* AUTHORS, ks-multiply.c: filled AUTHORS file

	* main.c: typo

	* README.dev: need aclocal too

	* Makefile: removed -> switch to autotools

	* AUTHORS, NEWS, README.dev: new files for autotools

	* ecm2.c, ks-multiply.c, listz.c, stage2.c: fixed a few memory leaks

2005-01-27  alex  <kruppa>

	* pm1.c: Fixed mem leak (pointed out by PaulZ)

2005-01-26  paul  <zimmerma>

	* INSTALL, README, b1_ainc.c, main.c: updated README

	* ChangeLog, mpmod.c: modified ChangeLog
	added special base2mod for Fermat numbers

2005-01-26  laurent  <fousse>

	* Makefile.am, configure.in: Rules cleaning.

	* Makefile.am, configure.in: More autotools voodoo, borrowed from MPFR.

2005-01-26  paul  <zimmerma>

	* listz.c, mpmod.c, pm1.c, schoen_strass.c, INSTALL:
	further cleaning of "unused" variables

	* bestd.c, ecm.c, ecm.h, listz.c, main.c, pm1.c, pp1.c:
	removed unused code and variables

2005-01-25  paul  <zimmerma>

	* bestd.c, ecm.h, ks-multiply.c, listz.c: fixed a problem in bestD
	changed version to 5.2.0
	implemented wrap-around trick in division

2005-01-17  laurent  <fousse>

	* Makefile.am: Add missing source file.

	* bestd.c:
	No need to bother with values.h, float.h is enough and seems to work just
	as well.

2005-01-15  laurent  <fousse>

	* auxi.c: Correct call to getrusage.

2005-01-14  alex  <kruppa>

	* ecm.h, pm1.c, pp1.c, stage2.c, ecm.c:
	Expected time to find a factor printed at end of stage 2

2005-01-07  paul  <zimmerma>

	* redc.asm: added copyright header

	* mpmod.c, redc.asm, Makefile: added assembly support for redc

2005-01-05  paul  <zimmerma>

	* mpmod.c: renamed ecm functions with mpz_ or mpn_ prefix

2005-01-04  paul  <zimmerma>

	* mpmod.c: improved mpz_mod_n

2004-10-24  alex  <kruppa>

	* rho.c: Added missing prototypes

	* ecm.h, rho.c, stage2.c, Makefile:
	Dickman's rho function for computing ECM's probability of success. Is
	printed for various factor sizes with -v parameter.

2004-10-12  alex  <kruppa>

	* ecm-gmp.h: Replaced #if ... /#else #if ...  by  /#elif ...

	* schoen_strass.c: Fixed checksum debugging code for NOPAD case

2004-10-06  paul  <zimmerma>

	* mul_fft.c:
	this is the mul_fft.c code from gmp (gmp-cvs-20040917 patched)

	* main.c: changed default k to 2

2004-09-29  paul  <zimmerma>

	* ks-multiply.c, listz.c, stage2.c:
	added wrapmul in ks-multiply.c (not used so far)
	removed check for number of multiplies in stage2.c (not possible with KS)

2004-09-28  alex  <kruppa>

	* stage2.c:
	Print final residue (product of polyeval output) if verbosity >= 3,
	i.e. "-v -v"

	* schoen_strass.c, mpmod.c, Fgw.c, Makefile, ecm.h:
	Interface to use George Woltman's gwnum library for Fermat numbers

2004-09-23  alex  <kruppa>

	* mpmod.c: Stupid bug: = instead of == in comparison. :(

2004-09-21  paul  <zimmerma>

	* mpmod.c: fixed misusage of mpn_mul_fft()

2004-09-21  alex  <kruppa>

	* ecm.h, mpmod.c, schoen_strass.c:
	Use of GMP FFT in mpmod.c self-contained now, and used only for exponent
	>=32768. Use of GMP FFT added to schoen_strass.c, but currently disabled -
	misses a factor of F15.

	* README: Small changes to Note on Fermat numbers section

2004-09-21  paul  <zimmerma>

	* mpmod.c:
	with HAVE_FFT defined, mpres_mul() directly calls mpn_mul_fft()

	* README: removed one sentence

2004-09-13  alex  <kruppa>

	* README:
	Some changes to Brent-Suyama section. Added note on factoring Fermat
	numbers.

2004-09-13  paul  <zimmerma>

	* main.c: disable Line=... messages by default

	* ks-multiply.c: fixed bug when m=0

	* Makefile: added CFLAGS to LD (needed on Sparc)

2004-09-11  alex  <kruppa>

	* schoen_strass.c, listz.c:
	PolyInvert() now uses a middle product for Fermat numbers

	* schoen_strass.c, stage2.c:
	Moved global var Fermat from stage2.c to schoen_strass.c

2004-09-10  alex  <kruppa>

	* polyeval.c:
	Oops - accidentally deleted a list_mod() statement. Fixed.

	* polyeval.c, bestd.c:
	polyeval_tellegen() still used a short product instead of Schoenhage-Strassen
	for Fermat numbers! Fixed, approx. doubles speed for POLYEVAL and mul count
	matches theory now.

	* median.c: Additional paramter check for Fermat case of KMulGen()

	* ecm.h: KS_MULTIPLY was accidentally #undef'd, now #define'd again

	* median.c:
	TMulGen would call TMulKS() even if KS_MULTIPLY was undef'd. Fixed.

2004-09-09  alex  <kruppa>

	* bestd.c, ecm.h, pp1.c, stage2.c:
	Double sieve for P+1 (does not use multiple progressions, only skips)
	bestD() takes d2 into account.

2004-09-09  laurent  <fousse>

	* configure.in: Verify that GMP was compiled with FFT enabled.

	* Makefile.am, configure.in:
	Actually test for GMP presence in configure.
	Support for test targets in Makefile.am.

2004-09-09  paul  <zimmerma>

	* median.c, test.pm1, ecm.h, ks-multiply.c, listz.c, main.c, bestd.c:
	use middle product in PolyInvert
	changed bestD() for new KS routines
	now TMulKS takes an additional parameter "rev"

2004-09-09  alex  <kruppa>

	* mpmod.c, pm1.c, stage2.c, test.ecm, bestd.c, ecm.h, ecm2.c:
	Double sieve for generating roots of ECM and P-1, see Montgomery "Speeding",
	section 9. P+1 tbd. bestD() does not know about larger block length yet,
	tbd.

2004-09-09  paul  <zimmerma>

	* ks-multiply.c: malloc -> xmalloc

	* ks-multiply.c: fixed malloc bug

	* trial.c, auxi.c: fixed warning

2004-09-08  alex  <kruppa>

	* listz.c:
	added #else to avoid warning about unreachable code by Sun CC.

2004-09-08  paul  <zimmerma>

	* polyeval.c, ecm2.c, ks-multiply.c, median.c, ecm.h, ecm-gmp.h:
	added TMulKS() [and macro FFT_WRAP, and KS_TMUL_THRESHOLD]
	moved ASSERT() to ecm.h
	fixed typo in ecm2.c

	* ecm.h, listz.c, median.c, polyeval.c: added list_swap
	fixed inefficiency in polyeval_tellegen (list_mul_high call did not
		reduce coefficients mod n)

2004-09-07  paul  <zimmerma>

	* listz.c, median-aux.c, median.c, polyeval.c, ecm.h, ks-multiply.c:
	cleaned up polyeval_tellegen and median.c:
	- converted comments in english
	- use functions of listz.c when possible
	- translate mpz_mul_ui (.., .., 2) into mpz_mul_2exp
	- other tiny optimizations

	* TODO: sorted items

	* pm1.c, pp1.c, main.c: default for -ticdelay is now -1

	* ecm.h: added comments about #define's

2004-09-06  paul  <zimmerma>

	* mpmod.c: oops, modulus->bits can be negative

	* mpmod.c: modulus->bits is always positive

	* ecm.h, mpmod.c, pm1.c:
	now isbase2() is called with same threshold BASE2_THRESHOLD (in ecm.h)
	base2mod() changed to perform no division any more

2004-09-03  alex  <kruppa>

	* stage2.c, listz.c:
	Where possible, polynomials F, G and invF are deallocated before calling
	polyeval(), polyeval_tellegen() or poly_gcd().

	* ecm.h:
	POLYEVAL got set whenever POLYEVALTELLEGEN was set, overriding POLYGCD.
	Changed so that POLYGCD overrides both POLYEVAL and POLYEVALTELLEGEN.

2004-09-03  paul  <zimmerma>

	* stage2.c: experimental code to save/restore the product tree

2004-09-03  alex  <kruppa>

	* schoen_strass.c, listz.c:
	PrerevertDivision() uses a non-zeropadded transforms for Fermat numbers if
	poly degree is not too large.

	Removed Matrix Fourier Algorithm (no faster) and testing code in
	schoen_strass.c

2004-09-03  paul  <zimmerma>

	* ks-multiply.c: added comment

2004-09-01  laurent  <fousse>

	* Makefile.am, configure.in: Autoconf'ing the project.

2004-09-01  alex  <kruppa>

	* ecm.h, listz.c, schoen_strass.c:
	Added option for transform without zero padding to Sch"onhage-Strassen.

2004-08-31  paul  <zimmerma>

	* ks-multiply.c: thresholds now takes into account number size too

2004-08-31  alex  <kruppa>

	* TODO:
	Added entry for idea of choosing roots of F and G from Montgomery
	"Speeding", 9.1.3

2004-08-31  paul  <zimmerma>

	* Makefile, ks-multiply.c, listz.c:
	improved PrerevertDivision when KS_MULTIPLY defined

2004-08-30  alex  <kruppa>

	* Makefile, auxi.c, ecm.h, listz.c, schoen_strass.c, toomcook.c:
	Sch"onhage-Strassen code now can multiply monic polynomials directly. This
	saves adds when building polys from their roots, unfortunately the speed
	gain is minimal.

	mpz_divby3_1op() moved to auxi.c

2004-08-30  paul  <zimmerma>

	* ks-multiply.c:
	Kronecker-Scho"nhage's code, contributed by David Newman <david.newman@jesus.ox.ac.uk>

	* Makefile, bestd.c, ecm-gmp.h, ecm.h, listz.c, mpmod.c, polyeval.c, stage2.c:
	integrated David Newman's Kronecker-Scho"nhage's code

	* schoen_strass.c: commented out mpz_divby3_1op (already in toomcook.c)

	* TODO: added one todo line (KS mult)

2004-08-26  alex  <kruppa>

	* bestd.c, ecm.h, ecm2.c, stage2.c:
	bestd_po2() examines both B2min and B2 instead of just their difference, and
	has better d values for very small polynomial degrees.

	* resume.c: Resuming now always reduces the x-coordinate (mod N).

	* schoen_strass.c:
	Multiplication of transformed coefficients inside the MFA transform. Should
	save uncached memory accessed but isn't much faster in practice.

	* ecm.h, ecm2.c, stage2.c:
	Correct handling of adding identical points in addWnm() by doubling.

	* Makefile: Commented out Sun cc specific options

	* schoen_strass.c:
	Routines for Sch"onhage-Strassen multiplication of polynomials

2004-07-28  alex  <kruppa>

	* pm1.c, pp1.c, resume.c, stage2.c, Makefile, auxi.c, bestd.c, ecm-gmp.h, ecm.h, ecm2.c, listz.c, main.c, median.c:
	Schoenhage-Strassen for multiplying polynomials modulo Fermat numbers.

	Computation of roots for F and G for ECM does several progressions in
	parallel, to reduce number of extgcds and, for F, reduce the number of roots
	computed.

	* eval.c:
	Sun cc doesn't like leading underscores in variable names. _B and _N renamed
	to B and N.

2004-06-24  laurent  <fousse>

	* Makefile, README, ecm.1:
	Fix typo in documentation and clarify the `nobase2' option.

2004-04-06  paul  <zimmerma>

	* bestd.c, listz.c: added Weimerskirch/Paar trick for Karatsuba (K=3)

2004-02-13  laurent  <fousse>

	* median.c: Deleted some unused lines.

2004-01-21  laurent  <fousse>

	* ecm.1: Added ecm.1 man page; needs update.

2004-01-20  laurent  <fousse>

	* ecm.h, main.c:
	Added usage function and changed usage output stream to stdout.

2004-01-20  jim  <jfoug>

	* main.c: Fixed for MinGW builds  (no res/resource.h)

2004-01-20  laurent  <fousse>

	* main.c: Fixed "-n" and "-nn" parameters for unix.

2004-01-16  jim  <jfoug>

	* README, TODO, candi.c, ecm.c, ecm.h, main.c, pm1.c, pp1.c:
	Added -go <INTEGER> handling.  The code to use this has NOT been added to ecm_stage1()
	or pp1_stage1().  It has been placed into pm1_stage1().  Also, the full syntax processing
	has been added to main.c.   Candi.c has a new structure to handle this (mpgocandi_t).
	<INTEGER> can be of any valid expression form, and may contain N letter(s) as a placeholder
	for the current processing candidate number.

	* stage2.c, pp1.c, pm1.c:
	Modifications to allow screen percentage ticks to run through a global function.
	That function will only update at the proper delay, or possibly NOT show anything at all

	* main.c:
	Modifications to allow screen percentage ticks to run through a global function.
	That function will only update at the proper delay, or possibly NOT show anything at all
	The showscreenticks() and showscreenticks_change_stage() functions are in this source file.

	* ecm.h, ecm.c:
	Modifications to allow screen percentage ticks to run through a global function.
	That function will only update at the proper delay, or possibly NOT show anything at all

	* TODO:
	Added information about -ticdelay n  (note ticdelay -1 turns off the percentage done stuff).
	Any other n value simply is the number of ms between percentage done stderr updates.

2004-01-12  jim  <jfoug>

	* smartprp.c: Bug in the hex escape sequence parser in the -prp cmd

	* README: Added explanation of the escape %xH[H] to the -prp cmd

	* smartprp.c: Added the excape %xH[H] to the -prp cmd  cmd parsing.

2004-01-12  paul  <zimmerma>

	* smartprp.c: new file (added for Jim)

2004-01-12  jim  <jfoug>

	* ecm.h:
	Updated beta version and added new declarations for the smart prp function

	* main.c:
	Use the new "smart" prp function and parse the new -prp* command args

	* candi.c: Use the new "smart" prp function

	* Makefile:
	Updated with new smartprp.c (and updated DIST to be all .c files)

	* README:
	Added new section about exteral spawned prp app, and added to the command line section

	* ChangeLog: Added info about changes since 5.1-beta
	(Hex expressions and VC porting in 5.1.1-beta)
	(External PRP program spawning in 5.1.2-beta)

2004-01-12  paul  <zimmerma>

	* ecm.h, eval.c, main.c, pm1.c, pp1.c, candi.c:
	number of primality loops is now controlled by PROBAB_PRIME_TESTS (ecm.h)

2004-01-09  laurent  <fousse>

	* main.c:
	Fixed "warning: C++ style comments are not allowed in ISO C90"

2004-01-09  jim  <jfoug>

	* auxi.c, resume.c, trial.c, main.c: Porting needed for VC to build

	* median.c: Port change needed to compile under VC

	* ecm-gmp.h:
	Porting needed for VC to build  This latest change taken from the latest (4.1.2) GMP's gmp-impl.h file.

	* eval.c, candi.c, bestd.c: Porting needed for VC to build

	* ecm.h:
	Bumped up beta version number.  This version has hex number handling in expressions, and is ported to VC

2004-01-06  jim  <jfoug>

	* eval.c: Added handling of Hex numbers to the expression parser.

	* median.c: Modified to build under MinGW (and VC)

	* bestd.c: Modified to comiple under MinGW

2003-12-12  paul  <zimmerma>

	* polyeval.c: changed copyright line

	* Makefile, bestd.c, ecm.h, listz.c, median.c, polyeval.c, stage2.c:
	several improvements in polyeval_tellegen (now default)

2003-12-11  paul  <zimmerma>

	* ecm.h, median.c, polyeval.c, bestd.c:
	added option -DCHECK_MULS to check number of muls

	* stage2.c: added warning when estimated and computed muls differ

	* polyeval.c: a factor of 2 was missing in muls_tuptree (case l=m)

	* median.c: now muls_tgen calls directly muls_gen

	* listz.c: replaced calls to toomcook4/toomcook4_low/toomcook4_high
	by calls to LIST_MULT_N/list_mul_low/list_mul_high

	* ecm.h:
	type of multiplication (kara, toom3, toom4) is now defined in ecm.h

	* bestd.c: replaced muls_toom4 by muls_gen

2003-12-10  laurent  <fousse>

	* polyeval.c: Multiplication accounting is added in polyeval_tellegen.

2003-12-09  laurent  <fousse>

	* stage2.c: Timing added when using polyeval_tellegen.

2003-12-09  paul  <zimmerma>

	* mpmod.c: changed temp1 -> temp2 in mpres_out_str

2003-12-09  laurent  <fousse>

	* ecm.h, median-aux.c, median.c, polyeval.c:
	Polyeval_tellegen now uses transposed Toom Cook.

2003-12-05  alex  <kruppa>

	* countsmooth.c:
	Reports values of lucky Brent-Suyama matches. Barely tested, beware!

2003-12-05  laurent  <fousse>

	* median.c: Used better ad hoc divisions by 2 and 3.

2003-12-04  laurent  <fousse>

	* median.c:
	Fixed bugs in transposed Toom Cook multiplication with weird argument
	sizes.

2003-12-03  alex  <kruppa>

	* Makefile, countsmooth.c:
	computes roots at 1 (mod 6). -pm1, -blocks and -ecm flags. Makefile target.

2003-12-03  laurent  <fousse>

	* Makefile, median.c: Transposed Toom-Cook3 should work now.

2003-12-02  alex  <kruppa>

	* countsmooth.c: Can use getprime() now.

	* countsmooth.c: Tool to count smooth values. Supports Brent-Suyama.

2003-12-01  alex  <kruppa>

	* TODO:
	Added Colin Percivals generalized DWT, moved rootsF [j*d, i] -> [j*d+1, i]
	to done.

2003-12-01  laurent  <fousse>

	* ecm.h, median.c, polyeval.c: Fixed muls_tkara.

2003-11-27  paul  <zimmerma>

	* TODO: added new entry

2003-11-27  laurent  <fousse>

	* Makefile, bestd.c, ecm.h, median.c, polyeval.c, stage2.c:
	Added a new multipoint evaluation function in stage2
	(polyeval_tellegen) with associated functions.
	#define POLYEVALTELLEGEN if you want to use it.

2003-11-26  paul  <zimmerma>

	* COPYING.LIB, Makefile: added COPYING.LIB (for ecm-gmp.h and memory.c)

2003-11-24  paul  <zimmerma>

	* test.ecm: put in sh syntax

	* stage2.c: comptue one more term of 1/F (needed for TupTree)

2003-11-19  paul  <zimmerma>

	* INSTALL: new timings for ppc

2003-11-18  paul  <zimmerma>

	* main.c: updated minimum sizes for potential champions

	* INSTALL: updated timings for ppc

2003-11-17  paul  <zimmerma>

	* INSTALL: added timings for ppc

2003-11-07  paul  <zimmerma>

	* ecm.h: new function mpres_realloc

	* ecm.c, ecm2.c: defined local procedures as 'static'

	* mpmod.c: mpz_mod_n now always assumes ALLOC(r) >= nn

	* stage2.c: check alloc. size of f (used as mpres_t)

	* test.ecm: added new tests for ecm-5.0.1 bug

2003-11-05  paul  <zimmerma>

	* ecm.h: changed some prototypes, added some others

	* toomcook.c: redirect directly to karatsuba in toom4

	* test.pp1: added newline before ok

	* test.pm1: added newline before ok message

	* test.ecm: ok message made similar to other tests

	* stage2.c: now compute estimated number of muls for stage2
	(and prints corresponding percentage)

	* polyeval.c: modified calls to RecursiveDivision

	* pm1.c: removed unused variable

	* mpmod.c:
	incorporated changes to fix ecm-5.0.1 bug (overflow in input of mpz_mod_n)

	* listz.c: new routines to compute short products (low and high)

	* check.mpl:
	new routines to determine numbers of muls of short products

	* bestd.c:
	completely rewritten (now determine the exact number of muls and not
		   an estimation)

	* TODO: removed several done items

2003-10-31  paul  <zimmerma>

	* test.ecm: added test for bug in 5.0.1

2003-10-20  paul  <zimmerma>

	* Makefile, auxi.c, bestd.c, candi.c, eval.c:
	changes suggested by Laurent Fousse to enable compilation with gcc 3.3.2

	* TODO: removed done item

2003-10-17  paul  <zimmerma>

	* ChangeLog, ecm.c, ecm.h, main.c, pm1.c, pp1.c, stage2.c, test.ecm, test.pp1:
	changed quiet mode (-q) to print all factors on same line (contributed by
	Laurent Fousse)

2003-10-16  paul  <zimmerma>

	* Makefile, bestd.c, ecm.h, ecm2.c, stage2.c, test.ecm, test.pm1, test.pp1:
	put in patch from Alex to solve "B2min too small" problem

2003-07-22  paul  <zimmerma>

	* TODO: added one item (-Q)

	* TODO: added one item

	* polyeval.c: fixed potential memory leak

2003-07-02  paul  <zimmerma>

	* bestdaux.c, candi.c, ecm2.c, eval.c, getprime.c, listz.c, main.c, ntl.c, pm1.c, stage2.c:
	added check for return value of malloc

2003-06-20  paul  <zimmerma>

	* Makefile, ntl.c:
	applied patches from Christian Cornelssen <ccorn@cs.tu-berlin.de>

	* stage2.c: moved check for overflow at the beginning

	* TODO: added suggestion from one user

2003-06-19  paul  <zimmerma>

	* TODO: added one item

2003-05-09  paul  <zimmerma>

	* main.c: smallest P+1 champion is now 37 digits

2003-04-22  alex  <kruppa>

	* Makefile, mul_lo.c, stage2.c: Changes to make building with NTL work

2003-04-22  paul  <zimmerma>

	* INSTALL: fixed typo

	* test_sh.ecm, test_sh.pm1, test_sh.pp1: now replaced by test.*

	* test.ecm, test.pm1, test.pp1: converted from csh to sh

	* Makefile: now only gmp is linked statically

2003-04-16  jim  <jfoug>

	* main.c: Changes for incremental saving (but commented out).

	* resume.c: Changes to incremental resuming (but it is commented out)

	* stage2.c, pp1.c: Stage 2 overflow fixes from 5.01

	* pm1.c: Stage 2 overflow fixes from 5.01
	Added some new logic for the incremental save/resume, but it is commented out.

	* ecm2.c: Stage 2 overflow fixes from 5.01

	* ecm.h: Stage 2 overflow fixes (from 5.01).

	* ecm.c: Partial resume code commented out for now.

	* test_sh.ecm, test_sh.pm1, test_sh.pp1, test.ecm, test.pp1, test.pm1:
	Added stage2 overflow test

	* Makefile: Added ChangeLog to EXTRADIST section

	* ChangeLog: Version 5.01 additional file to ECM project

	* INSTALL: Added new changes which were in release 5.01
	Added new information about MinGW32 timings (and compiling switches)

	* README: Updated to Pauls changes in 5.01

2003-04-11  paul  <zimmerma>

	* main.c: limit for P+1 champion is now 35 digits

2003-04-09  jim  <jfoug>

	* auxi.c:
	Failed to set the "first time flag" and convert the double to unsigned to fix a roundoff bug.

2003-04-05  alex  <kruppa>

	* mpmod.c: GMP prior to 4.1 does not have GMP_NUMB_BITS defined. Using
	__GMP_BITS_PER_MP_LIMB in that case.

	* resume.c:
	Bugfix: save file lines were not correct if both sigma and A value was
	given (a semikolon was missing).

2003-03-30  jim  <jfoug>

	* README:
	Added section 6 "ECM-GMP Expression syntax" (and adjusted original sections 6-10 to 7-11)
	Added docs about b1_ainc.c candi.c trial.c eval.c and the test_sh.* files which are newly added to version 5.1
	List trial div, expressions, and looping in section 2 (new major items since ecm4c).
	Added the -I f and -i n and -B2scale switches to section 3 (efficient use of ecm-gmp)
	Changed section 5 (memory usage) to list that in -b breadthfirst mode (the default for -inp),
	that the whole file is read into memory at one time, thus increasing memory footprint (but for good reasons).
	Added [-inp file] as an optional paramter (even though it is really an option), and list that the
	redirection of a file i.e. < file is now optional [ < file]. It is optional because of -inp file.
	Added -t n to "Options to control factorization method"
	Added -B2scale f to Options to control step 2
	Added -cofdec and -ve n to Options to control output
	Added info about incremental saving during B1 stage, and also documented that it is currently NOT working
	Added options "-i n", "-I f", "-n", "-nn", "-one" and "-b -d" to Miscellaneous options section.
	Added information that the first known problem has been eliminated (at least I know it is gone in my MinGW32 builds).
	Added 2 new "known problems" which are caused by the new stderr output for the 1 line output, and
	for the stage1/stage2 "percentage" done screen output (which btw, the stage2 percentage done is not
	yet done ;) The "second" of these new known problems is not a "certain" problem. It is one that
	someone (Paul) needs to look into and see how the interaction of this new stderr output works with
	the client server, and with things like nohup & under unix (I myself don't have access to any *nix shell)

	* main.c, pm1.c, pp1.c, ecm.h, ecm.c:
	Added a B2 scaling factor (user supplied multipler for calculated B2 values)

2003-03-25  jim  <jfoug>

	* ecm2.c:
	ecm.h was modified, but ecm2.c was missed and needed modified also.

	* resume.c:
	The incremental saving function has been neutered until it is working correctly in ecm/pm1/pp1 stage 1 functions.

	* main.c:
	Added -cofdef (forced cofactor in decimal even if an expression is "valid")
	Added a Cnnn "header" to the B1= .. line listing the length of the candidate (unless the candidate expression is explicitily listed)
	Fixed a couple of spots where the stderr 1 line output (in > redirection mode) was not erasing the prior line

	* auxi.c: Added high resulution timers to MinGW and MSVC builds.

2003-03-14  jim  <jfoug>

	* main.c:
	B2min was broken due to handling of the -i n and -I f auto incrementation code.

2003-03-14  paul  <zimmerma>

	* main.c: smallest top-ten P-1 has now 39 digits

	* test.pm1: B1 was too small in new test

	* pp1.c, stage2.c, test.pm1, pm1.c:
	added check for overflow in stage2 + test

	* ecm.h: changed "unsigned int" into "unsigned long" for s parameter

2003-03-12  paul  <zimmerma>

	* Makefile: added -pedantic

2003-03-12  jim  <jfoug>

	* main.c:
	On "usage" screen, had not renamed -a n to -i n, nor had -I f been added.
	Removed a C++ comment.

	* main.c: Removed C++ comment

	* resume.c, candi.c: Removed C++ comments

	* resume.c: Removed a couple C++ comments

	* pp1.c: Fixed Boo boo.

	* pm1.c: Fixed boo boo.

	* eval.c: Removed C++ comments

	* ecm.c: fixed boo boo.

	* b1_ainc.c, auxi.c: Removed some C++ comments

	* main.c:
	Changed default "shallow" mode factor finding to "deep" mode (continues to find more factors
	Removed the -deep command line switch
	Added command line switch -one (forces ECM back into shallow mode).
	-i file changed to -inp file.   -ib file removed.
	-i defaults to width-first and cat file | ecm b1 defaults to depth-first searching.
	added a -d for depth-first processing (to complement the -b breadth-first mode).
	Removed -a n  (constant B1 increment mode)
	Added -i n    (constant B1 increment mode)
	Added -I f    (Auto calculation (with scaling by f) B1 increment mode)
	Removed stage 1 precentage "setup" output.  That is now output in the 3 stage1 functions.

	* README:
	Added new options to document, but there is very little docmentation about them yet.  THIS IS STILL todo

	* TODO:
	Updated todo list with new items, and moved items that are done, or partly done

	* pp1.c: Finished stage 1 percentage counter

	* pm1.c: Finished stage1 percentage done

	* ecm.c:
	Completed percentage done in stage one, and removed 'setup' output for stage2

	* stage2.c: Added "starting" code for percentage counter on stage 2

	* ecm.h: Added declaration of B1 incrementation function

	* b1_ainc.c: Code to do auto-incrementation of B1.
	It works with a constant increment value, or
	it computes the "ideal" increment (based on current B1).
	It can also scale this calculated "ideal"

	* toomcook.c: Removed ABS define, since it is now in ecm.h

	* Makefile:
	Added new source file b1_ainc.c (does "auto" incrementation of B1 values)

2003-03-11  paul  <zimmerma>

	* main.c: changed P-1 champion limit

	* main.c, pp1.c:
	fixed problem with potential champions for -pp1, when it performs P-1

	* ecm-gmp.h, ecm.h: moved ABS to ecm.h

2003-03-07  jim  <jfoug>

	* TODO: Updated the % done item.

	* pp1.c, pm1.c: Added Stage 1 screen percentage updating.
	Added Stage 1 Auto incremental saving

	* main.c: Added -deep to trial factoring (actually added !(-deep)
	Added space after function calls to bring my code into existing coding specifications.

	* ecm.h: Added -deep command to trial factoring

	* trial.c:
	If we are not in -deep mode, then bail out after first factor is found

	* TODO:
	Added -qq for ultra quiet mode (i.e. for running under the client/server)

	* eval.c:
	Fixed bugs introduced removing C++'ism.  The max val needed to be adjusted before the
	realloc, or we would simply realloc the same sized buffer (and then overwrite it)

	* main.c: Placed the fprintf(T:000) back where it needed to be.
	Remove any temp AutoSaved B1 file since it is no longer needed.

	* candi.c: Wrong function title in the validation check logic.

	* ecm.c:
	Added "plumbing" for incremental AutoSaving of B1 (every 15 minutes) !!NOT YET WORKING CORRECTLY!!
	Changed 1:000 percentage screen updates to once every 30 seconds.

2003-03-07  paul  <zimmerma>

	* Makefile, ecm.h: changed version to 5.1-beta

2003-03-07  jim  <jfoug>

	* resume.c:
	Added const to char * in resume, and put an else so that sigma AND A could not both be written
	Created write_temp_resumefile() and kill_temp_resume_file() functions.

	* ecm.h:
	Added defines for write_temp_resumefile and kill_temp_resume_file (found in resume.c)
	Added spaces to my function declarations to more conform to the ecm standard.

	* eval.c:
	Added a strnicmp() function (in VC and MinGW, we use the native version)

	* TODO:
	Changed incremental saving and Percentage done to be partially done

2003-03-07  paul  <zimmerma>

	* ecm-gmp.h, ecm.c, eval.c, main.c, trial.c:
	fixed a few C++-specific idioms

2003-03-07  jim  <jfoug>

	* ecm.c: Stage 1 ECM code for 1:000 to 1:100 done and working fine.

	* trial.c:
	The "testing code" for the T:000 to T:100 was not quite in the right place

2003-03-06  jim  <jfoug>

	* main.c:
	Added some code to do T:000 to T:100 (and 1: 2:) "percentage done" output to stderr (i.e. dummy lights)
	Changed Factors= to factors= on the stderr line
	in Breadthfirst mode, now show "loop count" stderr line on first loop.
	in Breadthfirst mode, show the current line processing/total lines in file on the output line.

	* eval.c: Added C++ style sinle line comment to expression parser
	Now lines starting with '#' is a comment, and from where ever a // is found, to the end of a line is a comment.

	* TODO:
	Added information about 80 dots and how to do that with the existing stderr output of the lines/loops

	* trial.c:
	Added code to do T:000 to T:100 "percentage done" output to stderr (i.e. dummy lights)

	* ecm.h: Updated "internal" version to current interim build

2003-03-05  jim  <jfoug>

	* test_sh.pp1: P+1 Test script file (for borne shell)

	* test_sh.pm1: P-1 Test script file (for borne shell)

	* test_sh.ecm: ECM Test script file (for borne shell)

	* dummy:
	Bye bye dummy

	* dummy:
	Test for PauZ (and help for me)

2003-03-05  paul  <zimmerma>

	* candi.c, eval.c, trial.c: files from Jim

2003-03-04  jim  <jfoug>

	* main.c: LOT of changes.

	New switches:
	  -a n      (auto increment B1 after each loop)
	  -i file   (input file, not from stdin)
	  -ib file  (breadth-first looping)
	  -b        (breadth-first looping for stdin)
	  -deep     (continued factoring after a factor is found)
	  -n        (nice mode, only fully implemented in Win32)
	  -nn       (VERY nice mode, i.e. idle)
	  -t n      (trial factoring, up to n)
	  -ve n     (verbose expression printing, for expressions < n chars)

	The read_number() now calls the expression parser.  read_number is only
	  used to skip blank (or commented) lines.  The expression parser does the rest.

	Most changes took place in the "looping" code, since now we loop either width
	  first (the current 5.0 default), or "breadth-first", and since during looping
	  the program may handle found factors either "shallow" (the current default
	  5.0 mode), or -deep.

	* auxi.c: nb_bits now const.
	A MUCH improved rand generator for Win32

	* TODO:
	Expression parse done.  -nice done (not -kill).  a "key" added so that todo's and done's can be listed

	* ecm-gmp.h:
	alloc.h did not work with MinGW. The change was taken from a GMP header

	* ecm.h:
	Created mpcandi_t struction (for warehousing info about the candidate)
	Use the mpcandi_t object instead of simple mpz_t where it is needed
	Added functions from candi.c, eval.c, trial.c (and main.c since read_number is needed by resume code)
	Made nb_bits be const

	* resume.c: Use mpcand_t for candidate numbers
	Output expressions in save/resume file (if expression exists)
	Patches for MinGW and MSVC for machine name

	* Makefile: Added candi.c eval.c and trial.c to Makefile

2003-03-04  paul  <zimmerma>

	* main.c: check mp_bits_per_limb = GMP_NUMB_BITS

	* toomcook.c: rewrote comparison in toomcook4()

	* test.ecm: updated for new bestD()

	* stage2.c: use new bestD() function

	* main.c: new semantics of -k

	* README: new semantics for -k option

	* main.c: now default k is 0 (lower bound)

	* ecm.h: updated wrt changes in bestd.c

	* check.mpl: new functions to compute number of multiplies in step 2

	* bestd.c: new code using data generated by bestdaux.c

	* TODO: added several new items

	* Makefile, bestdaux.c:
	added bestdaux.c, auxiliary file to determine optimal parameters for bestd.c

2003-03-03  paul  <zimmerma>

	* INSTALL: updated timings for Athlon and EV6

	* README: added comments about probability wrt Table 1

	* tune.c: print MUL_KARATSUBA_THRESHOLD and DIV_DC_THRESHOLD

	* main.c: error when factor found is 1

	* TODO: added 3 items

	* mul_lo.c: put ecm.h after gmp-impl.h

	* ecm-gmp.h, ecm.h:
	now all thresholds are in ecm.h (should go after gmp-impl.h or ecm-gmp.h)

	* tune.c: fixed typo found by Christian Cornelssen

	* mpmod.c: changes from Christian Cornelssen to change thresholds

	* README: added info on "tune"

	* Makefile: use LDFLAGS for tune
	added tune in clean target

	* INSTALL: added info on Darwin

2003-02-28  paul  <zimmerma>

	* test.ecm: added tests for bug found by Jim

	* ecm.c: fixed bug found by Jim Fougeron

2003-02-24  paul  <zimmerma>

	* TODO: added 1 item

	* INSTALL, Makefile: get rid of -LNTL/... in Makefile
	added instructions for LDFLAGS/-D__freebsd in INSTALL

2003-02-24  alex  <kruppa>

	* pm1.c: Added comment to why we use Dickson(4), Dickson(6), x^12,..

2003-02-24  paul  <zimmerma>

	* TODO: updated

2003-02-23  alex  <kruppa>

	* README: small changes, notably maximum possible B1 for ECM and P+1.

2003-02-23  paul  <zimmerma>

	* ecm.c, main.c:
	now prints the *exact* number of digits for large numbers

	* TODO, listz.c: updated TODO
	changed list_gcd to use 'p' only at the end

	* README: stage -> step

	* Makefile, ecm.h: version is now 5.0

	* INSTALL: minor changes

	* memory.c: added tests_memory_status

	* mpmod.c: changed threshold for isbase2

	* resume.c: added space

2003-02-23  alex  <kruppa>

	* toomcook.c: Made indentation more Gnuish

	* main.c: Revered order of opening save and resume file

2003-02-23  paul  <zimmerma>

	* ecm.h: removed __gmp_default_free

	* listz.c: style editing

	* getprime.c: forgot to reinitialize offset

	* ecm.c: style editing
	static val -> non static

	* TODO: added 2 items

	* Makefile: CFLAGS not needed in link phase

2003-02-22  alex  <kruppa>

	* listz.c, lucas.c, main.c, mpmod.c, mul_lo.c, ntl.c, pm1.c, polyeval.c, polyz.c, pp1.c, resume.c, stage2.c, test.ecm, test.pm1, test.pp1, toomcook.c, tune.c, Makefile, TODO, auxi.c, bestd.c, ecm.c, ecm.h, ecm2.c, getprime.c:
	Changed copyright notice

	* auxi.c: Small cleanup of get_random_ui()

2003-02-21  alex  <kruppa>

	* main.c:
	Initialising comment etc. with empty string to avoid comment fields containig
	garbage being printed.

	* pp1.c: Using n^2-1 instead of n-1 for inclusion in stage 1.
	Unconditionally setting g to 1 afterwards to avoid including n^2-1 again
	later.

2003-02-20  alex  <kruppa>

	* README:
	Small changes. Comments on default values of k and Brent-Suyama updated.

	* ecm.h, mpmod.c: mpres_clear, mpres_set and mpres_swap are now macros

	* resume.c:
	addef fflush() after writing save file lines to avoid partial line in case
	of abort

	* main.c: Added test for existing save file

2003-02-20  paul  <zimmerma>

	* test.pm1: rm -> /bin/rm

	* README, ecm-gmp.h:
	put back #include <alloca.h> by default (unless __freebsd is defined)

	* ecm.h: defined macro FREE

	* pm1.c, pp1.c: don't print x0 when resume

	* memory.c: exported tests_free

	* main.c: __gmp_free_func -> FREE

	* ecm2.c: use variable for 2S+2

	* ecm.c: use fprintf for error

	* ecm-gmp.h: use alloca when __sun is defined

	* auxi.c: use macro FREE

	* TODO: added some items

	* README: added note about different -save and -resume names
	added note about alloca.h problems

	* Makefile: added -static

	* Makefile: more changes from Granlund

	* Makefile, ecm.h: changed version to 5.0-beta-pl3
	improved Makefile clean entry

2003-02-19  alex  <kruppa>

	* auxi.c: Made changes suggested by Torbjorn

	* ecm2.c: Fixed bug freeing unallocated vars in ecm_rootsG_init().
	(thanks again Torbjorn)

	* auxi.c, ecm.h, main.c: Better seed for RNG

2003-02-19  paul  <zimmerma>

	* Makefile, auxi.c, ecm-gmp.h: patches from Granlund for FreeBSD

	* Makefile, ecm-gmp.h, ecm.h, mpmod.c, test.ecm:
	put extract from gmp-impl.h in separate file (copyright is different)

2003-02-19  alex  <kruppa>

	* ecm.c, ecm.h, ecm2.c, mpmod.c, pm1.c, pp1.c, stage2.c:
	P-1 selects reasonable degree for Brent-Suyama if none given by user
	*_roots[FG] return number of multiplies used

2003-02-19  paul  <zimmerma>

	* stage2.c, test.ecm, README, TODO, main.c: added -c <count> option
	improved documentation

	* Makefile, ecm.h: changed version to ecm-5.0-beta-pl2

	* Makefile, ecm.c, ecm.h, ecm2.c, mpmod.c, pp1.c, stage2.c:
	fixed warnings with -W

	* test.pm1: forced remove

2003-02-18  paul  <zimmerma>

	* bestd.c, ecm2.c, lucas.c, main.c, memory.c, resume.c, stage2.c:
	changed stream back to stdout for factors found

	* README, TODO: note on B2 > 100*B1
	added items in TODO

2003-02-18  alex  <kruppa>

	* ecm.c:
	The temp variable "t" was passed around, but never actually used anywhere.
	Removed.

	* ecm.h, ecm2.c, mpmod.c, pm1.c, stage2.c, test.pm1:
	ECM and P-1 print a message if a factor is found during the computation of
	the roots of F or G and verbosity is >= 2
	Eliminated "comparison between signed and unsigned" warnings when compiling
	with -W
	Added a test for saving/resuming to test.pm1

2003-02-16  alex  <kruppa>

	* ecm.c: Added default values for Brent-Suyama's extension for ECM.

	* TODO: Added a suggestion from Jay Berg, and one from me

2003-02-16  paul  <zimmerma>

	* INSTALL, Makefile, README, TODO, bestd.c, ecm.c, ecm.h, main.c, mpmod.c, pm1.c, pp1.c, stage2.c, test.pm1, test.pp1:
	fixed several issues found by Jay Berg

2003-02-16  alex  <kruppa>

	* main.c:
	Fixed generation of random sigmas (new sigma for each input number)

2003-02-15  alex  <kruppa>

	* pm1.c:
	cascade_mul_ui replaced by cascade_mul_d to avoid nasty bug: the power of a
	small prime is accumulated and *then* passed to cascade_mul_ui, so that
	overflow would occur for B1 >= 2^32.

	* resume.c:
	Make read_resumefile_line less ugly. Also reads Prime95 v22 ECM residues
	now.
	The users name and machine name are written when saving to file.

2003-02-14  paul  <zimmerma>

	* README, TODO: remarks from Jay Berg

	* INSTALL, README: added advertizing for ECMNET

	* TODO, pm1.c: fixed problem with mul_casc (powerpc630-ibm-aix5.1.0.0)

	* Makefile, README: added c155 in distrib

	* Makefile, README, ecm.h: version is back to 5.0-beta
	added timings in README

	* Makefile: missing tab

	* Makefile: get rid of recursive make

	* mpmod.c, mul_lo.c: __GMP_BITS_PER_MP_LIMB -> GMP_NUMB_BITS
	use inline only with gcc

	* INSTALL: moved comments about CC/CFLAGS

	* c155: test number for ecm efficiency

	* INSTALL: added comment about CC/CFLAGS

	* resume.c:
	changed char c to int c in freadstrn (otherwise c != EOF always true
	on irix64)

	* mpmod.c: put back reduction in mpres_add/sub

	* Makefile: transfer LD in recursive make

	* mpmod.c:
	fixed two problems (missing include alloca.h, add_nc not always defined)

	* pm1.c: include gmp-mparam.h only when WANT_GMP_IMPL

	* ecm.h, listz.c, polyeval.c: now list_mul_z also reduces mod modulus

	* pm1.c: fixed typo

	* mpmod.c:
	now mpz_mod_n takes both source and destination, to avoid copies

	* main.c: added -primetest option

	* listz.c: added function to check size of residues (DEBUG)

	* ecm.c: used swap in add3 to avoid copies

	* TODO: removed done item (-primetest)

2003-02-13  paul  <zimmerma>

	* Makefile, ecm.h: changed version

	* mul_lo.c, pp1.c, stage2.c, mpmod.c: minor editing

	* main.c: updated on-line help

	* listz.c: added missing space

	* cputime.h: now in auxi.c

	* TODO: removed 2 done items

	* README: updated with -resume, new files, etc

	* ecm.h, main.c, mpmod.c, pm1.c, pp1.c, ecm.c:
	implemented -nobase2 option

	* mpmod.c, mul_lo.c: got rid of gmp-impl.h
	(if WANT_GMP_IMPL not defined)

	* Makefile: removed -pedantic
	now -DPOLYEVAL is no longer needed (it is the default)

	* ecm.h: define MUL_KARATSUBA_THRESHOLD (if not already)
	define POLYEVAL (if not POLYGCD)

	* main.c:
	replaced #ifdef POLYEVAL by #ifndef POLYGCD (now POLYEVAL is the default)

2003-02-13  alex  <kruppa>

	* main.c:
	Small change to "Usage" text: added remark that -resume can read from stdin.

2003-02-12  paul  <zimmerma>

	* main.c: updated on-line help

2003-02-12  alex  <kruppa>

	* resume.c: I'll try to stop violating my own specs.
	METHOD= values changed from PM1 and PP1 to P-1 and P+1.

2003-02-12  paul  <zimmerma>

	* mpmod.c: improved mpz_mod_n (gain of about 10%)

	* test.ecm: added -k for "extra" factor

	* TODO: removed done items

	* Makefile: removed mul_hi from tune target

	* mpmod.c: new REDC at mpn-level, using fast mpn_mul_lo

	* main.c: changed default number of blocks for POLYEVAL

	* ecm.h: added prototype for mul_lo

	* README: added "how to get the best of GMP-ECM"

	* mul_lo.c: low-half multiplication

	* tune.c: to tune mpmod algorithms

	* Makefile: added mul_lo and tune

	* stage2.c: removed number of muls without -v

	* Makefile: replaced CXX by LD when appropriate

2003-02-12  alex  <kruppa>

	* resume.c: Routines for saving/resuming residues

2003-02-12  paul  <zimmerma>

	* stage2.c: fixed another memory leak

	* stage2.c: fixed memory leak

	* pm1.c: added default POWM_THRESHOLD

2003-02-11  alex  <kruppa>

	* test.ecm, test.pm1, test.pp1:
	Modified test suites to work with new command line paramters

	* Makefile, ecm.c, ecm.h, ecm2.c, main.c, pm1.c, pp1.c, stage2.c, test.ecm:
	Added -resume option.
	Sigma, the A paramter and starting point are now specified by the command
	line option -sigma, -A and -x0.

2003-02-08  paul  <zimmerma>

	* INSTALL: added comment about editing Makefile

2003-02-06  alex  <kruppa>

	* toomcook.c: Changed copyright.

2003-02-06  paul  <zimmerma>

	* mpmod.c: added mpn-version of REDC

	* Makefile: ecm5 -> ecm

	* test.pm1: put missing |

	* Makefile: removed -static

2003-02-05  paul  <zimmerma>

	* TODO: added one item

	* mpmod.c: added cast to mp_limb_t

	* Makefile: added GMP= and NTL= in recursive make call

	* Makefile: updated VERSION

	* INSTALL, README, ecm.h: version is now 5.0-beta
	updated INSTALL and README

	* main.c: use ECM_VERSION for -save

	* test.ecm, test.pm1: removed too long tests

	* TODO: added item for long term

	* toomcook.c: added spaces

	* test.ecm, test.pm1, test.pp1: added license

	* stage2.c: removed #ifdef INVF (now INVF always used)
	added B2min
	added total count of muls

	* pp1.c: added B2min

	* polyz.c: removed/commented unused code

	* polyeval.c: added count of muls

	* pm1.c: updated copyright line
	added B2min

	* ntl.c: updated copyright line

	* mpmod.c: fixed efficiency problem in mpz_mod_n

	* memory.c: updated document origin

	* main.c: added champion treatment
	allow rational seed
	added B2min

	* lucas.c, listz.c, getprime.c: updated copyright line

	* ecm2.c: updated copyright line
	removed unused code

	* ecm.h: added licence
	modified prototypes to include B2min

	* ecm.c: updated copyright line
	added B2min in args to ecm()

	* bestd.c: updated copyright line

	* auxi.c: updated copyright line
	added cputime (from cputime.h, now removed)

	* TODO: removed items done

	* README: added explanation on
	- how to use P-1, P+1, ECM
	- table of optimal B1, B2
	- memory usage
	- option -save

	* Makefile: added licence
	moved polyz.c in EXTRAFILES

	* INSTALL: updated (NTL not needed any more)

2003-02-04  paul  <zimmerma>

	* polyeval.c: implement algorithm POLYEVAL

	* stage2.c: adapted for polyeval

	* polyz.c: commented poly_gcd when POLYEVAL

	* mpmod.c: cosmetic changes

	* listz.c:
	several changes for polyeval, in particular modified PolyFromRoots
	to complete the whole product tree

	* ecm.h: several changes for polyeval

	* auxi.c: added ceil_log2

	* Makefile:
	adapted to allow both compilation with NTL (POLYGCD=1) and without (default)

	* test.ecm: added -k option to one test with g1 > B2

	* TODO: added one item

	* main.c: added -power in on-line help

	* main.c: added option -power

2003-01-30  alex  <kruppa>

	* ecm.c, ecm.h, ecm2.c, main.c, mpmod.c, pm1.c, pp1.c, stage2.c:
	Command line option -dickson to control whether Dickson polys are used or
	not.
	Factors found in ecm_rootsG are handeled properly.
	Added checksum to save file lines.

2003-01-29  alex  <kruppa>

	* main.c, pm1.c, pp1.c:
	P-1 and P+1 are again exponentiating by N-1 and the default seed for P-1 is
	random again, which I had disabled during test runs.

2003-01-27  alex  <kruppa>

	* mpmod.c, pm1.c, pp1.c, stage2.c, ecm.c, ecm.h, ecm2.c, main.c:
	Choosing the modulo reduction algorithm inside the different factoring
	algos now, residue and modulus passed to pm1(), pp1() and ecm() are mpz_t
	again.

	Initialisation for different mod algos are separate functions now to allow
	specifically choosing one.  New command line paramters added for doing so.

2003-01-27  paul  <zimmerma>

	* mpmod.c: added explicit casts for 64-bit machines

	* main.c: char -> int for return value of getchar()

2003-01-13  alex  <kruppa>

	* ecm.h, mpmod.c: Another attempt to check in the MODMULN code.

2003-01-12  alex  <kruppa>

	* pp1.c: Fixed typo and a small memory leak in rootsG_init/clear.

2003-01-10  paul  <zimmerma>

	* Makefile: added mpmod.{c,o}

2003-01-03  alex  <kruppa>

	* mpmod.c:
	Basic functionality for modular arithmetic. Plain mpz_mod, base-2 and REDC
	are implemented. MULMODN is to follow.

	* listz.c, lucas.c, main.c, memory.c, pm1.c, pp1.c, stage2.c, ecm.c, ecm.h, ecm2.c:
	Changes for using mpmod arithmetic. Moved computation of roots of F and G
	into ecm2.c, pp1.c and pm1.c, respectively.

2002-12-20  paul  <zimmerma>

	* stage2.c: comments should be in standard C format /* ... */
	and not in C++ format // ...

2002-12-19  alex  <kruppa>

	* auxi.c, ecm.h, stage2.c:
	Basic functions for Dickman's polynomials. Not enabled yet.

2002-12-17  paul  <zimmerma>

	* test.ecm: test file for ecm (from ecm4c)

	* check.mpl: added useful routines for ecm

	* stage2.c: adapted for ecm stage 2

	* main.c: removed temporary try with MPM

	* pp1.c: added computation of multiplies
	added routine to check if factor found by P-1 or P+1
	now always uses PRAC

	* polyz.c: inhibit memory check functions during NTL call

	* pm1.c: adapted to generic stage 2

	* main.c: added memory check functions (with -DDEBUG)
	fixed some memory leaks

	* lucas.c: started to adapt to generic modular multiplication

	* listz.c: put mpz_mulmod macro in ecm.h

	* ecm.h: modified for ecm stage 2

	* ecm.c: adapted for stage 2

	* TODO: removed 2 items

	* ecm2.c: functions for ecm stage 2

	* Makefile: added ecm2.c and memory.c

	* memory.c: file to check memory allocation

2002-12-06  paul  <zimmerma>

	* pm1.c, pp1.c, ecm.c: added fflush() after "Using sigma/seed=..."

	* TODO: added format proposal for save/restore

	* TODO: changed one item

	* TODO: added 4 items

2002-12-05  alex  <kruppa>

	* ecm.c, ecm.h, main.c, pm1.c, pp1.c, stage2.c:
	Support for save files half finished.
	Factors are returned in a new variable, f. p is only for passing residues
	around, and stage2() must not change p.
	New parameter: B1done, which tells factoring functions up to which bound
	stage 1 has been completed before.
	Save files can be created, but not read in yet.

2002-12-03  paul  <zimmerma>

	* Makefile: aux.c -> auxi.c

2002-11-30  paul  <zimmerma>

	* aux.c, auxi.c: renamed aux.c to auxi.c (problems under Windows)

2002-11-29  paul  <zimmerma>

	* pp1.c: get rid of count_leading_zeros

	* Makefile, lucas.c: added file lucas.c

	* stage2.c: changed order of operands in pp1_mul

	* pp1.c: now uses Lucas sequences when PRAC is defined

	* main.c: defined B1cost for ECM

	* ecm.h: changed order of arguments of pp1_mul_ui for consistency
	added prototype for pp1_mul_prac

	* ecm.c: cosmetic changes

	* TODO: added several items

2002-11-28  paul  <zimmerma>

	* INSTALL, Makefile, README: added INSTALL file

	* pp1.c, stage2.c:
	use pp1_mul instead of pp1_mul_ui to avoid depending on longlong.h

	* Makefile:
	put /usr/local/gmp and /usr/local/ntl as default directories for GMP and NTL

	* toomcook.c: changed <gmp.h> to "gmp.h" for consistency

	* ecm.h, main.c, pm1.c, pp1.c:
	now use random seed for all methods when sigma=0
	use getpid() in addition of time() for random seed

2002-11-27  paul  <zimmerma>

	* pp1.c: fixed bug in pp1_mul_ui

2002-11-26  alex  <kruppa>

	* ecm.c, main.c, pm1.c, pp1.c:
	Cleaned up handling of default values and method-specific screen output.

2002-11-26  paul  <zimmerma>

	* test.pp1: test file for Williams P+1

	* pp1.c: Williams P+1 method

	* stage2.c: adapted for P+1

	* ecm.h: added prototypes for P+1
	added 'method' argument to stage2 functions

	* pm1.c: passed method=PM1_METHOD to stage2() call

	* main.c: added P+1

	* ecm.c: added method in stage2() call

	* README: todo in a separate file
	updated

	* TODO: TODO file :-)

	* Makefile: added pp1.c

2002-11-25  paul  <zimmerma>

	* ecm.h, listz.c, stage2.c:
	added INVF trick (precomputation of 1/F to speed up divisions by F)

	* check.mpl: added auxiliary functions to compute numbers of multiplies
	of karatsuba, toomcook3, toomcook4

	* README: removed one item done in TODO, added one more

2002-11-24  alex  <kruppa>

	* toomcook.c:
	Proof for temp space now reflects the reduced memory requirements of
	toomcook3(). No change to code itself.

2002-11-19  paul  <zimmerma>

	* ecm.h, listz.c: karatsuba() returns int again

2002-11-19  alex  <kruppa>

	* ecm.c, ecm.h, main.c: Added ECM stage 1.
	In ecm.h, return type of karatsuba changed to void again, to match karatsuba
	in listz.c.

	* listz.c: Toom-Cook 4 is default again.
	buildG now prints timing info to stdout instead of stderr.

2002-11-15  paul  <zimmerma>

	* ecm.h: return type changed to int

	* toomcook.c:
	optimized karatsuba/toomcook3/toomcook4 thresholds for minimum of scalar
	multiplies

	* test.pm1: added one test

2002-11-14  paul  <zimmerma>

	* main.c:
	replaced __GNU_MP_VERSION etc by gmp_version (better for dynamic library)

	* Makefile: removed -static

2002-11-07  alex  <kruppa>

	* ecm.h, toomcook.c:
	Bug: forgot to change definition of T in toomcook.c, so the temp space
	required still was 2*len+4*log_3(len). Oddly, it did not crash.
	Fixed (the "too much space" problem, not "the did not crash" problem).

2002-11-06  alex  <kruppa>

	* listz.c, toomcook.c:
	toomcook[34]() use <= 2*len+2*log_3(len) temp space now

2002-11-05  paul  <zimmerma>

	* check.mpl: included Williams P+1 stage 1 code and test inputs

	* ecm.h, main.c, pm1.c, stage2.c: replaced INVS macros by if-statements
	(use the x+1/x trick whenever Pollard P-1 is performed)

	* main.c:
	changed default choice of B2 so that stage 2 takes about half of stage 1
	(assuming Toom-Cook 3 is used)

	* test.pm1: added 3 more tests
	changed -e 6 into -e 12 (if "invs" trick not used)

	* stage2.c: added INVS macro to enable "invs" trick

	* pm1.c: added trick from Peter for Cunningham numbers

	* main.c: changed default k to 7
	set default S to 1 for ecm, 2 for Pollard (without INVS)

	* listz.c: only style changes

2002-11-04  alex  <kruppa>

	* ecm.h, listz.c, toomcook.c: Added toomcook4().

2002-11-01  alex  <kruppa>

	* test.pm1:
	Added a factor that was missed by old polygcd code to test cases

2002-10-29  alex  <kruppa>

	* ecm.h, stage2.c, test.pm1:
	rootsG uses batch inversion for large Suyamas powers.
	Tried to make indentation coherent.

2002-10-28  alex  <kruppa>

	* stage2.c: Fixed bad merge, T was allocated twice

2002-10-27  alex  <kruppa>

	* ecm.c, ecm.h, listz.c, main.c, pm1.c, stage2.c:
	Added Suyamas powers for stage 2.

2002-10-25  alex  <kruppa>

	* toomcook.c:
	Added GPL header. Cleaned up comments a little. No change to code itself.

2002-10-25  paul  <zimmerma>

	* check.mpl: added function to compute Toom-Cook 3 auxiliary space

	* toomcook.c: edited according to GNU coding style
	and added analysis of temp. space needed

	* stage2.c: modified memory space for T

	* main.c: put back sigma=17 as initial value for P-1

	* listz.c: incorporated toomcook3 code from Alex

	* ecm.h: added prototype for toomcook3

	* Makefile: added toomcook.c

	* test.pm1: added one test

	* stage2.c: fixed bug in rootsG (G[0] was not set)

	* test.pm1: test file for Pollard P-1

	* poly.c: replaced by listz.c (lists) and polyz.c (polynomials)

	* polyz.c: routines for polynomials of integers (mpz_t)

	* listz.c: routines for arrays of mpz_t's

	* ntl.c: NTL interface (first version)

	* stage2.c, pm1.c: added verbose flag

	* main.c: adapted for NTL interface

	* getprime.c: fixed problems with signed/unsigned integers

	* ecm.h: modified for NTL interface

	* ecm.c: added verbose flag

	* check.mpl: added routine for Pollard P-1 stage 1

	* bestd.c: added missing stdlib.h

	* aux.c: added missing string.h

	* README: gcd stuff is ok now (using NTL)

	* Makefile: adapted for NTL interface

2002-10-24  paul  <zimmerma>

	* toomcook.c: Toom-Cook 3-way code from Alexander Kruppa

2002-09-13  paul  <zimmerma>

	* COPYING: New file.

	* COPYING: first version

	* Makefile, README, aux.c, bestd.c, check.mpl, cputime.h, ecm.c, ecm.h, getprime.c, main.c, pm1.c, poly.c, stage2.c:
	New file.

	* Makefile, README, aux.c, bestd.c, check.mpl, cputime.h, ecm.c, ecm.h, getprime.c, main.c, pm1.c, poly.c, stage2.c:
	first version

